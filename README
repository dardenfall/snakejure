# snakejure

Game snake, created for learning clojure.

## Usage

You can start game by executing game.sh (linux) or game.bat (windows).
Or you can start game by invoking function "game" from ui.clj file, 
this function in snakejure.uo namespace.
To win game you must "lay" on every "noiser" (magenta rectangles) simultaneously. When you win game resets.

## Installation

You can see, that it's leiningen project, but I don't use leiningen it right know. 
I hope I'll start use it in future.

## Structure

core.clj - contains basic functions, "business" functions :). 
	   They are responsible for changing state of the game.
ui.clj   - contains user interface functions. 
  	   They interact with user, create frame, timer, action listeners.
levels directory - directory with clj files, which represents levels.

Each level is a separate clj file with at least 1 public function - "create-level" with no arguments:
(defn create-level [] ...)
It must return map like with following keys: :name :snake :apple :noisers :walls.
For example see basic.clj level.

## TODO
1. Add levels: every level is map with :snake :apple-generator :noisers keys. Apple generator is a function
for generating apples. I want every level to be in it's own clj file, and application will dynamically load them.
2. Extract from core.clj all functions, which are responsible for modifying
mutable data (like update-smth). But I don't know now what name new clj file and namespace should have.
3. Remove boundaries and make field infinite. 

I want to create ability to run levels, written in clojure. They will be placed in clj files in /src/snakejure/levels directory. 
I don't know exactly how do load them when application starts... Some kind of reflection, but it should be easy in clojure.
I suppose there are some functions for it.

  
